
class TypeCasting
{
	
	/*
		Here  We are going to learn about type casting 
		
		There are two type of type casting 
		
		1 ] Implicit type casting 
		2 ] Explicit type casting 
			
		JVM follows two rules while type casting the variable 
		
		1 ] Both data types must be compatable with each other 
		2 ] JVM never allows the type casting which results in loss of value 
		
		Smaller data types always converted in larger data types 
		
		otherwise complier will generate error like 
		
		Uncompilable code - incompatible types: possible lossy conversion from int 
		to short	
		
		
		boolean data type : - 
		
		* ] In java Boolean values are not integer values 
		they are only types of true and false nothing else 
		
		* ] boolean variables are never campatable with any data type 
		they cant be type casted either implicit or explicit 
		
		
		
	*/
	
	public static void main(String args[])
	{	
	
		
		boolean a = true;
		
		System.out.println(a);
		
		
		char ch = (char)65535;
		//System.out.println(Integer.parseInt(ch+"")); numberFormatException 
		
		byte b =128;
                // error is like 
                /*
                	byte b = 128 :- causes this error 
                	Typecasting.java:50: error: incompatible types: possible lossy conversion from int to byte
			byte b = 128;
		         ^
			
			
			this  error  says : possible lossy conversion means we can explicitely type cast byte to int 
			which cause the loss in the value of the variable    
                */	
		
		int p ="compile time error";
		/*
			Typecasting.java:60: error: incompatible types: String cannot be converted to int
			int p ="compile time error";
			     ^
		*/
		
		
			boolean bl = True;
	      /*
	      
	            Typecasting.java:69: error: cannot find symbol
	            boolean bl = True;
					    ^
		   symbol:   variable True
		   location: class TypeCasting

	      
	      */
	      
	      // we can represent the numbers in int oct and hex frormat 
	      
	      int h = 0X19;
	      
	      System.out.println(h) // this will print the int value rither we have assigned the hex
	      
	      double dh= 0x19.0;
	      
	      // malformed floating point literals 
	    //  Exception in thread "main" java.lang.RuntimeException: Uncompilable code - malformed floating-point literal
	    
	    int h1=0xa.a
		
	}
}
